
package com.bravehorsie.jaxws.runtimeclient;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0-SNAPSHOT
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CountService", targetNamespace = "http://com.bravehorsie.jaxws/", wsdlLocation = "file:/home/roma/dev/java/metrojpmstest/jaxws-runtime-client/src/main/resources/service.wsdl")
public class CountService_Service
    extends Service
{

    private final static URL COUNTSERVICE_WSDL_LOCATION;
    private final static WebServiceException COUNTSERVICE_EXCEPTION;
    private final static QName COUNTSERVICE_QNAME = new QName("http://com.bravehorsie.jaxws/", "CountService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/roma/dev/java/metrojpmstest/jaxws-runtime-client/src/main/resources/service.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        COUNTSERVICE_WSDL_LOCATION = url;
        COUNTSERVICE_EXCEPTION = e;
    }

    public CountService_Service() {
        super(__getWsdlLocation(), COUNTSERVICE_QNAME);
    }

    public CountService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), COUNTSERVICE_QNAME, features);
    }

    public CountService_Service(URL wsdlLocation) {
        super(wsdlLocation, COUNTSERVICE_QNAME);
    }

    public CountService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COUNTSERVICE_QNAME, features);
    }

    public CountService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CountService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CountService
     */
    @WebEndpoint(name = "CountServicePort")
    public CountService getCountServicePort() {
        return super.getPort(new QName("http://com.bravehorsie.jaxws/", "CountServicePort"), CountService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountService
     */
    @WebEndpoint(name = "CountServicePort")
    public CountService getCountServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com.bravehorsie.jaxws/", "CountServicePort"), CountService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COUNTSERVICE_EXCEPTION!= null) {
            throw COUNTSERVICE_EXCEPTION;
        }
        return COUNTSERVICE_WSDL_LOCATION;
    }

}
